/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './features/~__root'
import { Route as IndexImport } from './features/~index'
import { Route as StatisticsIndexImport } from './features/~statistics/~index'
import { Route as RequestIndexImport } from './features/~request/~index'
import { Route as PrinterIndexImport } from './features/~printer/~index'
import { Route as ManagementIndexImport } from './features/~management/~index'
import { Route as LoginIndexImport } from './features/~login/~index'
import { Route as HistoryIndexImport } from './features/~history/~index'
import { Route as AddPrinterIndexImport } from './features/~add-printer/~index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const StatisticsIndexRoute = StatisticsIndexImport.update({
  id: '/statistics/',
  path: '/statistics/',
  getParentRoute: () => rootRoute,
} as any)

const RequestIndexRoute = RequestIndexImport.update({
  id: '/request/',
  path: '/request/',
  getParentRoute: () => rootRoute,
} as any)

const PrinterIndexRoute = PrinterIndexImport.update({
  id: '/printer/',
  path: '/printer/',
  getParentRoute: () => rootRoute,
} as any)

const ManagementIndexRoute = ManagementIndexImport.update({
  id: '/management/',
  path: '/management/',
  getParentRoute: () => rootRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const HistoryIndexRoute = HistoryIndexImport.update({
  id: '/history/',
  path: '/history/',
  getParentRoute: () => rootRoute,
} as any)

const AddPrinterIndexRoute = AddPrinterIndexImport.update({
  id: '/add-printer/',
  path: '/add-printer/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/add-printer/': {
      id: '/add-printer/'
      path: '/add-printer'
      fullPath: '/add-printer'
      preLoaderRoute: typeof AddPrinterIndexImport
      parentRoute: typeof rootRoute
    }
    '/history/': {
      id: '/history/'
      path: '/history'
      fullPath: '/history'
      preLoaderRoute: typeof HistoryIndexImport
      parentRoute: typeof rootRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/management/': {
      id: '/management/'
      path: '/management'
      fullPath: '/management'
      preLoaderRoute: typeof ManagementIndexImport
      parentRoute: typeof rootRoute
    }
    '/printer/': {
      id: '/printer/'
      path: '/printer'
      fullPath: '/printer'
      preLoaderRoute: typeof PrinterIndexImport
      parentRoute: typeof rootRoute
    }
    '/request/': {
      id: '/request/'
      path: '/request'
      fullPath: '/request'
      preLoaderRoute: typeof RequestIndexImport
      parentRoute: typeof rootRoute
    }
    '/statistics/': {
      id: '/statistics/'
      path: '/statistics'
      fullPath: '/statistics'
      preLoaderRoute: typeof StatisticsIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/add-printer': typeof AddPrinterIndexRoute
  '/history': typeof HistoryIndexRoute
  '/login': typeof LoginIndexRoute
  '/management': typeof ManagementIndexRoute
  '/printer': typeof PrinterIndexRoute
  '/request': typeof RequestIndexRoute
  '/statistics': typeof StatisticsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/add-printer': typeof AddPrinterIndexRoute
  '/history': typeof HistoryIndexRoute
  '/login': typeof LoginIndexRoute
  '/management': typeof ManagementIndexRoute
  '/printer': typeof PrinterIndexRoute
  '/request': typeof RequestIndexRoute
  '/statistics': typeof StatisticsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/add-printer/': typeof AddPrinterIndexRoute
  '/history/': typeof HistoryIndexRoute
  '/login/': typeof LoginIndexRoute
  '/management/': typeof ManagementIndexRoute
  '/printer/': typeof PrinterIndexRoute
  '/request/': typeof RequestIndexRoute
  '/statistics/': typeof StatisticsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/add-printer'
    | '/history'
    | '/login'
    | '/management'
    | '/printer'
    | '/request'
    | '/statistics'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/add-printer'
    | '/history'
    | '/login'
    | '/management'
    | '/printer'
    | '/request'
    | '/statistics'
  id:
    | '__root__'
    | '/'
    | '/add-printer/'
    | '/history/'
    | '/login/'
    | '/management/'
    | '/printer/'
    | '/request/'
    | '/statistics/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AddPrinterIndexRoute: typeof AddPrinterIndexRoute
  HistoryIndexRoute: typeof HistoryIndexRoute
  LoginIndexRoute: typeof LoginIndexRoute
  ManagementIndexRoute: typeof ManagementIndexRoute
  PrinterIndexRoute: typeof PrinterIndexRoute
  RequestIndexRoute: typeof RequestIndexRoute
  StatisticsIndexRoute: typeof StatisticsIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AddPrinterIndexRoute: AddPrinterIndexRoute,
  HistoryIndexRoute: HistoryIndexRoute,
  LoginIndexRoute: LoginIndexRoute,
  ManagementIndexRoute: ManagementIndexRoute,
  PrinterIndexRoute: PrinterIndexRoute,
  RequestIndexRoute: RequestIndexRoute,
  StatisticsIndexRoute: StatisticsIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "~__root.tsx",
      "children": [
        "/",
        "/add-printer/",
        "/history/",
        "/login/",
        "/management/",
        "/printer/",
        "/request/",
        "/statistics/"
      ]
    },
    "/": {
      "filePath": "~index.tsx"
    },
    "/add-printer/": {
      "filePath": "~add-printer/~index.tsx"
    },
    "/history/": {
      "filePath": "~history/~index.tsx"
    },
    "/login/": {
      "filePath": "~login/~index.tsx"
    },
    "/management/": {
      "filePath": "~management/~index.tsx"
    },
    "/printer/": {
      "filePath": "~printer/~index.tsx"
    },
    "/request/": {
      "filePath": "~request/~index.tsx"
    },
    "/statistics/": {
      "filePath": "~statistics/~index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
